@using GPManagementSytem.Models
@model GPManagementSytem.ViewModel.ApprovePracticeChangesViewModel
@{
    ViewBag.Title = "Approve Practice Changes";

    var academicYearDD = ViewData["AcademicYearDD"] as List<SelectListItem>;

    string showPSG = "";
}

<h1>@ViewBag.Title</h1>
<hr class="main">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary()

    <div class="validation-summary-errors" id="inclusion-errors"></div>

    <div id="error" style="display:none"></div>
    @Html.HiddenFor(model => model.changedRecord.Id)
    @Html.HiddenFor(model => model.originalRecord.Id)
    @Html.HiddenFor(model => model.changedRecord.PrimaryId)
    @Html.HiddenFor(model => model.changedRecord.RequestedBy)
    @Html.HiddenFor(model => model.changedRecord.DateRequested)
    <h4>Main Details</h4>
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.Surgery != Model.changedRecord.Surgery)
                    {
                        <span class="input-group-text">
                            <i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.Surgery"></i>&nbsp; @Html.LabelFor(model => model.changedRecord.Surgery)
                        </span>
                        @Html.EditorFor(model => model.changedRecord.Surgery, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.Surgery)</span>
                        @Html.EditorFor(model => model.changedRecord.Surgery, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">Academic year</span>@Html.DropDownListFor(model => model.changedRecord.AcademicYear, academicYearDD, "--- Select Year ---", new { Class = "form-select" })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.SupplierNumber != Model.changedRecord.SupplierNumber)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.SupplierNumber"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.SupplierNumber)</span>
                        @Html.EditorFor(model => model.changedRecord.SupplierNumber, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.SupplierNumber)</span>
                        @Html.EditorFor(model => model.changedRecord.SupplierNumber, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.Address1 != Model.changedRecord.Address1)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.Address1"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.Address1)</span>
                        @Html.EditorFor(model => model.changedRecord.Address1, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.Address1)</span>
                        @Html.EditorFor(model => model.changedRecord.Address1, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.Address2 != Model.changedRecord.Address2)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.Address2"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.Address2)</span>
                        @Html.EditorFor(model => model.changedRecord.Address2, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.Address2)</span>
                        @Html.EditorFor(model => model.changedRecord.Address2, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.Town != Model.changedRecord.Town)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.Town"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.Town)</span>
                        @Html.EditorFor(model => model.changedRecord.Town, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.Town)</span>
                        @Html.EditorFor(model => model.changedRecord.Town, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.Postcode != Model.changedRecord.Postcode)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.Postcode"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.Postcode)</span>
                        @Html.EditorFor(model => model.changedRecord.Postcode, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.Postcode)</span>
                        @Html.EditorFor(model => model.changedRecord.Postcode, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.Telephone != Model.changedRecord.Telephone)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.Telephone"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.Telephone)</span>
                        @Html.EditorFor(model => model.changedRecord.Telephone, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.Telephone)</span>
                        @Html.EditorFor(model => model.changedRecord.Telephone, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.PracticeManager != Model.changedRecord.PracticeManager)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.PracticeManager"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.PracticeManager)</span>
                        @Html.EditorFor(model => model.changedRecord.PracticeManager, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.PracticeManager)</span>
                        @Html.EditorFor(model => model.changedRecord.PracticeManager, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.PMEmail != Model.changedRecord.PMEmail)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.PMEmail"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.PMEmail)</span>
                        @Html.EditorFor(model => model.changedRecord.PMEmail, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.PMEmail)</span>
                        @Html.EditorFor(model => model.changedRecord.PMEmail, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.GP1 != Model.changedRecord.GP1)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.GP1"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.GP1)</span>
                        @Html.EditorFor(model => model.changedRecord.GP1, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.GP1)</span>
                        @Html.EditorFor(model => model.changedRecord.GP1, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.GP1Email != Model.changedRecord.GP1Email)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.GP1Email"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.GP1Email)</span>
                        @Html.EditorFor(model => model.changedRecord.GP1Email, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.GP1Email)</span>
                        @Html.EditorFor(model => model.changedRecord.GP1Email, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.GP2 != Model.changedRecord.GP2)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.GP2"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.GP2)</span>
                        @Html.EditorFor(model => model.changedRecord.GP2, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.GP2)</span>
                        @Html.EditorFor(model => model.changedRecord.GP2, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.GP2Email != Model.changedRecord.GP2Email)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.GP2Email"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.GP2Email)</span>
                        @Html.EditorFor(model => model.changedRecord.GP2Email, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.GP2Email)</span>
                        @Html.EditorFor(model => model.changedRecord.GP2Email, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="input-group">
                    @if (Model.originalRecord.AdditionalEmails != Model.changedRecord.AdditionalEmails)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.AdditionalEmails"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.AdditionalEmails)</span>
                        @Html.TextAreaFor(model => model.changedRecord.AdditionalEmails,
    new { @class = "form-control fullTextArea fieldChanged", @rows = 3 })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.AdditionalEmails)</span>
                        @Html.TextAreaFor(model => model.changedRecord.AdditionalEmails,
    new { @class = "form-control fullTextArea", @rows = 3 })
                    }

                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    @if (Model.originalRecord.ListSize != Model.changedRecord.ListSize)
                    {
                    <span class="input-group-text"><i class="bi bi-pencil-square" data-toggle="tooltip" data-placement="top" title="@Model.originalRecord.ListSize"></i>&nbsp;@Html.LabelFor(model => model.changedRecord.ListSize)</span>
                        @Html.EditorFor(model => model.changedRecord.ListSize, new { htmlAttributes = new { @class = "form-control fieldChanged", type = "text" } })
                    }
                    else
                    {
                        <span class="input-group-text">@Html.LabelFor(model => model.changedRecord.ListSize)</span>
                        @Html.EditorFor(model => model.changedRecord.ListSize, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                    }

                </div>
            </div>
            <div class="col-md-6">

            </div>
        </div>
    </div>


    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <hr>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-6"><button class="btn btn-primary btn-success" type="submit">Confirm Changes</button></div>
            <div class="col-md-6"></div>
        </div>
    </div>
}
