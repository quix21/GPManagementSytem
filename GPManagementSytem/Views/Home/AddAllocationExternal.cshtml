@using GPManagementSytem.Models
@model GPManagementSytem.ViewModel.AllocationExternalViewModel
@{
    /**/

    ViewBag.Title = "GP Placements 2023/2024";

    var academicYearDD = ViewData["AcademicYearDD"] as List<SelectListItem>;
    var getGuid = ViewBag.Guid;

    string NumberStudentsRequested = "2";
}

<h1>@ViewBag.Title</h1>
<hr class="main">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary();

    <div class="validation-summary-errors" id="inclusion-errors"></div>

    <div id="error" style="display:none"></div>
    @Html.HiddenFor(model => model.practice.Id)
    @Html.HiddenFor(model => model.practice.DateCreated)
    @Html.HiddenFor(model => model.practice.UpdatedBy)
    @Html.HiddenFor(model => model.practice.DateUpdated)
    @Html.HiddenFor(model => model.practice.ContactSurgery)
    @Html.HiddenFor(model => model.practice.NewPractice)
    @Html.HiddenFor(model => model.practice.Active)
    @Html.HiddenFor(model => model.allocations.PracticeId)
    @Html.HiddenFor(model => model.allocations.AcademicYear)

    <input type="hidden" name="guid" id="guid" value="@getGuid" />
    <input type="hidden" name="GlobalNumberStudentsRequested" id="GlobalNumberStudentsRequested" value="@NumberStudentsRequested" />


    <div class="container-maintext">
        <p>All GP placements for 2023/2024 are in four-week blocks. Students will be placed in pairs and will be expected to attend GP placement for 3½ days a week with one half day for self-study and 1 day a week for University based teaching. </p>
        
        <p>
            Year 3 students will be released for University teaching on a THURSDAY<br />
            Year 4 students will be released for University teaching on a TUESDAY<br />
            Year 5 students will be released for University teaching on a FRIDAY

        </p>
        <p>The remuneration is paid at £140 per student per day and is therefore £3,920 for two students placed per 4-week placement (i.e. £1,960 per student placed).</p>
        <p>Please indicate which year group(s) of students you would like and which blocks you wish to have students by selecting the relevant tick boxes below.</p>
    </div>
    <h4>Practice Details</h4>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.Surgery)</span>
                    @Html.EditorFor(model => model.practice.Surgery, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group-hidden">
                    <span class="input-group-text">Academic year</span>@Html.DropDownListFor(model => model.practice.AcademicYear, academicYearDD, "--- Select Year ---", new { Class = "form-select" })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row-hidden">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.SupplierNumber)</span>
                    @Html.EditorFor(model => model.practice.SupplierNumber, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.Address1)</span>
                    @Html.EditorFor(model => model.practice.Address1, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.Address2)</span>
                    @Html.EditorFor(model => model.practice.Address2, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.Town)</span>
                    @Html.EditorFor(model => model.practice.Town, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.Postcode)</span>
                    @Html.EditorFor(model => model.practice.Postcode, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.Telephone)</span>
                    @Html.EditorFor(model => model.practice.Telephone, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.PracticeManager)</span>
                    @Html.EditorFor(model => model.practice.PracticeManager, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.PMEmail)</span>
                    @Html.EditorFor(model => model.practice.PMEmail, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.GP1)</span>
                    @Html.EditorFor(model => model.practice.GP1, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.GP1Email)</span>
                    @Html.EditorFor(model => model.practice.GP1Email, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.GP2)</span>
                    @Html.EditorFor(model => model.practice.GP2, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.GP2Email)</span>
                    @Html.EditorFor(model => model.practice.GP2Email, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.AdditionalEmails)</span>
                    @Html.TextAreaFor(model => model.practice.AdditionalEmails,
new { @class = "form-control fullTextArea", @rows = 3 })
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">@Html.LabelFor(model => model.practice.ListSize)</span>
                    @Html.EditorFor(model => model.practice.ListSize, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                </div>
            </div>
        </div>
    </div>
    <br /><br />
    @*<h4>2nd Year</h4>*@
    <div class="containerExternal">

        @*<div class="container">
            <p>Year 2 students are placed for one week in Practice as per the table below. Please indicate which weeks you wish to have students by ticking the relevant boxes.</p>
            <p>Students will be expected to attend GP placement for 4½ days a week with one half day on a Wednesday afternoon off, as mandated University afternoons.</p>
            <div class="row">
                <table class="table table-hover AllocationExtTable">
                    <tr>
                        <td>Week 1 @(Model.signupDates.Year2Wk1From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year2Wk1To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year2Wk1Requested" name="Year2Wk1Requested" value="true" @(Model.Year2Wk1RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Week 2 @(Model.signupDates.Year2Wk2From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year2Wk2To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year2Wk2Requested" name="Year2Wk2Requested" value="true" @(Model.Year2Wk2RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Week 3 @(Model.signupDates.Year2Wk3From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year2Wk3To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year2Wk3Requested" name="Year2Wk3Requested" value="true" @(Model.Year2Wk3RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Week 4 @(Model.signupDates.Year2Wk4From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year2Wk4To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year2Wk4Requested" name="Year2Wk4Requested" value="true" @(Model.Year2Wk4RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Week 5 @(Model.signupDates.Year2Wk5From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year2Wk5To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year2Wk5Requested" name="Year2Wk5Requested" value="true" @(Model.Year2Wk5RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Week 6 @(Model.signupDates.Year2Wk6From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year2Wk6To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year2Wk6Requested" name="Year2Wk6Requested" value="true" @(Model.Year2Wk6RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>*@
        @*<br />
        <div class="container">
            <h5>Can you accommodate four students?</h5>
            <p>
                <strong>
                    The students are to be placed in pairs, however you may have the capacity to take four students placement.<br />
                    The remuneration is paid at £140 per student per day and is therefore £630 per student per 1-week placement i.e. £1260 per pair of students placed.<br /><br />
                    Please indicate the number of students your Practice is able to accommodate per block.
                </strong>
            </p>
            <div class="row">
                <table class="table NumberRequestedTable">
                    <tr>
                        <td><strong>Number of students requested per week:</strong></td>
                        <td>
                            <div class="form-check form-check-inline">
                                2&nbsp; <input class="form-check-input" type="checkbox" id="Year2Requested2" name="Year2Requested2" value="2" @(Model.Year2Requested2Checked ? "checked" : "")>

                            </div>
                        </td>
                        <td>
                            <div class="form-check form-check-inline">
                                4&nbsp;  <input class="form-check-input" type="checkbox" id="Year2Requested4" name="Year2Requested4" value="4" @(Model.Year2Requested4Checked ? "checked" : "")>


                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>*@
        <h4>3rd Year</h4>
        <div class="container">
            <div class="row">
                <table class="table table-hover AllocationExtTable">
                    <tr>
                        <td>Block 1 @(Model.signupDates.Year3B1From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B1To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B1Requested" name="Year3B1Requested" value="true" @(Model.Year3B1RequestedChecked ? "checked" : "")>

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 2 @(Model.signupDates.Year3B2From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B2To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B2Requested" name="Year3B2Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 3 @(Model.signupDates.Year3B3From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B3To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B3Requested" name="Year3B3Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 4 @(Model.signupDates.Year3B4From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B4To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B4Requested" name="Year3B4Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 5 @(Model.signupDates.Year3B5From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B5To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B5Requested" name="Year3B5Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 6 @(Model.signupDates.Year3B6From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B6To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B6Requested" name="Year3B6Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 7 @(Model.signupDates.Year3B7From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year3B7To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year3B7Requested" name="Year3B7Requested" value="true">

                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <h4>4th Year</h4>
        <div class="container">
            <div class="row">
                <table class="table table-hover AllocationExtTable">
                    <tr>
                        <td>Block 1 @(Model.signupDates.Year4B1From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B1To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B1Requested" name="Year4B1Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 2 @(Model.signupDates.Year4B2From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B2To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B2Requested" name="Year4B2Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 3 @(Model.signupDates.Year4B3From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B3To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B3Requested" name="Year4B3Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 4 @(Model.signupDates.Year4B4From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B4To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B4Requested" name="Year4B4Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 5 @(Model.signupDates.Year4B5From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B5To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B5Requested" name="Year4B5Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 6 @(Model.signupDates.Year4B6From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B6To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B6Requested" name="Year4B6Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 7 @(Model.signupDates.Year4B7From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B7To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B7Requested" name="Year4B7Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 8 @(Model.signupDates.Year4B8From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year4B8To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year4B8Requested" name="Year4B8Requested" value="true">

                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>


        <h4>5th Year</h4>
        <div class="container">
            <div class="row">
                <table class="table table-hover AllocationExtTable">
                    <tr>
                        <td>Block 1 @(Model.signupDates.Year5B1From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year5B1To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year5B1Requested" name="Year5B1Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 2 @(Model.signupDates.Year5B2From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year5B2To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year5B2Requested" name="Year5B2Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 3 @(Model.signupDates.Year5B3From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year5B3To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year5B3Requested" name="Year5B3Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 4 @(Model.signupDates.Year5B4From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year5B4To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year5B4Requested" name="Year5B4Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 5 @(Model.signupDates.Year5B5From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year5B5To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year5B5Requested" name="Year5B5Requested" value="true">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>Block 6 @(Model.signupDates.Year5B6From?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>up to and including</td>
                        <td>@(Model.signupDates.Year5B6To?.ToString("dd/MM/yyyy") ?? string.Empty)</td>
                        <td>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="Year5B6Requested" name="Year5B6Requested" value="true">

                            </div>
                        </td>
                    </tr>

                </table>
            </div>
        </div>
        <br />
        <div class="container">
            <div class="row">
                <table class="table AcceptTermsTable">
                    <tr>
                        <td>On behalf of the above-named Practice, I confirm agreement to all matters set out in the Service Contract attached to the sign up invitation email. &nbsp; </td>
                        <td><input class="form-check-input" type="checkbox" id="acceptTerms" name="acceptTerms" value="1"></td>

                    </tr>
                </table>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <table class="table AcceptTermsTable">
                    <tr>
                        <td>Full name of the person confirming agreement on behalf of the above-named Practice:</td>
                        <td>

                            <div class="input-group">

                                @Html.EditorFor(model => model.allocations.ConfirmationName, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            </div>
                        </td>

                    </tr>
                </table>
            </div>
        </div>
    </div>

    @Html.ValidationSummary();
    <div class="validation-summary-errors" id="inclusion-errors"></div>

    <div id="error" style="display:none"></div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <hr>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-6"><button class="btn btn-primary btn-success" type="submit" id="submit">Submit Sign Up</button></div>
            <div class="col-md-6"></div>
        </div>
    </div>
}

<script type="text/javascript">

    $('#submit').prop("disabled", true);
    $('#acceptTerms').click(function () {
        if ($(this).is(':checked')) {
            $('#submit').prop("disabled", false);
        } else {
            if ($('.checks').filter(':checked').length < 1) {
                $('#submit').attr('disabled', true);
            }
        }
    });

</script>